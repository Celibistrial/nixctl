#compdef nixctl

autoload -U is-at-least

_nixctl() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_nixctl_commands" \
"*::: :->nixctl" \
&& ret=0
    case $state in
    (nixctl)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:nixctl-command-$line[1]:"
        case $line[1] in
            (clean)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(purge)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(update)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(upgrade)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(build)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(analyse)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(optimise)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(switch)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_nixctl__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:nixctl-help-command-$line[1]:"
        case $line[1] in
            (clean)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(purge)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(update)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(upgrade)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(build)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(analyse)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(optimise)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(switch)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_nixctl_commands] )) ||
_nixctl_commands() {
    local commands; commands=(
'clean:Removes unsed files from nix store' \
'purge:Deletes all previous generations from nix store' \
'update:Updates flake.lock' \
'upgrade:Upgrades system (also updates flake.lock)' \
'build:(Re)Builds system' \
'analyse:Analyses storage usage of nix store' \
'optimise:Optimises nix store' \
'switch:(Re)Builds system and switches' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'nixctl commands' commands "$@"
}
(( $+functions[_nixctl__analyse_commands] )) ||
_nixctl__analyse_commands() {
    local commands; commands=()
    _describe -t commands 'nixctl analyse commands' commands "$@"
}
(( $+functions[_nixctl__help__analyse_commands] )) ||
_nixctl__help__analyse_commands() {
    local commands; commands=()
    _describe -t commands 'nixctl help analyse commands' commands "$@"
}
(( $+functions[_nixctl__build_commands] )) ||
_nixctl__build_commands() {
    local commands; commands=()
    _describe -t commands 'nixctl build commands' commands "$@"
}
(( $+functions[_nixctl__help__build_commands] )) ||
_nixctl__help__build_commands() {
    local commands; commands=()
    _describe -t commands 'nixctl help build commands' commands "$@"
}
(( $+functions[_nixctl__clean_commands] )) ||
_nixctl__clean_commands() {
    local commands; commands=()
    _describe -t commands 'nixctl clean commands' commands "$@"
}
(( $+functions[_nixctl__help__clean_commands] )) ||
_nixctl__help__clean_commands() {
    local commands; commands=()
    _describe -t commands 'nixctl help clean commands' commands "$@"
}
(( $+functions[_nixctl__help_commands] )) ||
_nixctl__help_commands() {
    local commands; commands=(
'clean:Removes unsed files from nix store' \
'purge:Deletes all previous generations from nix store' \
'update:Updates flake.lock' \
'upgrade:Upgrades system (also updates flake.lock)' \
'build:(Re)Builds system' \
'analyse:Analyses storage usage of nix store' \
'optimise:Optimises nix store' \
'switch:(Re)Builds system and switches' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'nixctl help commands' commands "$@"
}
(( $+functions[_nixctl__help__help_commands] )) ||
_nixctl__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'nixctl help help commands' commands "$@"
}
(( $+functions[_nixctl__help__optimise_commands] )) ||
_nixctl__help__optimise_commands() {
    local commands; commands=()
    _describe -t commands 'nixctl help optimise commands' commands "$@"
}
(( $+functions[_nixctl__optimise_commands] )) ||
_nixctl__optimise_commands() {
    local commands; commands=()
    _describe -t commands 'nixctl optimise commands' commands "$@"
}
(( $+functions[_nixctl__help__purge_commands] )) ||
_nixctl__help__purge_commands() {
    local commands; commands=()
    _describe -t commands 'nixctl help purge commands' commands "$@"
}
(( $+functions[_nixctl__purge_commands] )) ||
_nixctl__purge_commands() {
    local commands; commands=()
    _describe -t commands 'nixctl purge commands' commands "$@"
}
(( $+functions[_nixctl__help__switch_commands] )) ||
_nixctl__help__switch_commands() {
    local commands; commands=()
    _describe -t commands 'nixctl help switch commands' commands "$@"
}
(( $+functions[_nixctl__switch_commands] )) ||
_nixctl__switch_commands() {
    local commands; commands=()
    _describe -t commands 'nixctl switch commands' commands "$@"
}
(( $+functions[_nixctl__help__update_commands] )) ||
_nixctl__help__update_commands() {
    local commands; commands=()
    _describe -t commands 'nixctl help update commands' commands "$@"
}
(( $+functions[_nixctl__update_commands] )) ||
_nixctl__update_commands() {
    local commands; commands=()
    _describe -t commands 'nixctl update commands' commands "$@"
}
(( $+functions[_nixctl__help__upgrade_commands] )) ||
_nixctl__help__upgrade_commands() {
    local commands; commands=()
    _describe -t commands 'nixctl help upgrade commands' commands "$@"
}
(( $+functions[_nixctl__upgrade_commands] )) ||
_nixctl__upgrade_commands() {
    local commands; commands=()
    _describe -t commands 'nixctl upgrade commands' commands "$@"
}

if [ "$funcstack[1]" = "_nixctl" ]; then
    _nixctl "$@"
else
    compdef _nixctl nixctl
fi
